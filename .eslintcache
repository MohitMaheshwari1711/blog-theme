[{"C:\\Users\\Acer\\Desktop\\blog-app\\src\\index.js":"1","C:\\Users\\Acer\\Desktop\\blog-app\\src\\App.js":"2","C:\\Users\\Acer\\Desktop\\blog-app\\src\\reportWebVitals.js":"3","C:\\Users\\Acer\\Desktop\\blog-app\\src\\Components\\Paginator\\Paginator.js":"4","C:\\Users\\Acer\\Desktop\\blog-app\\src\\firebase.js":"5","C:\\Users\\Acer\\Desktop\\blog-app\\src\\Components\\Card\\Card.js":"6","C:\\Users\\Acer\\Desktop\\blog-app\\src\\Components\\Index.js":"7","C:\\Users\\Acer\\Desktop\\blog-app\\src\\Components\\BlogDetails\\BlogDetails.js":"8","C:\\Users\\Acer\\Desktop\\blog-app\\src\\Components\\Footer\\Footer.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":1385,"mtime":1607453323693,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":767,"mtime":1607371692539,"results":"14","hashOfConfig":"11"},{"size":462,"mtime":1607366397221,"results":"15","hashOfConfig":"11"},{"size":1272,"mtime":1607455985493,"results":"16","hashOfConfig":"11"},{"size":2184,"mtime":1607455985494,"results":"17","hashOfConfig":"11"},{"size":1583,"mtime":1607455985493,"results":"18","hashOfConfig":"11"},{"size":350,"mtime":1607452865002,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1wtdxd8",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\Acer\\Desktop\\blog-app\\src\\index.js",[],["41","42"],"C:\\Users\\Acer\\Desktop\\blog-app\\src\\App.js",["43"],"C:\\Users\\Acer\\Desktop\\blog-app\\src\\reportWebVitals.js",[],"C:\\Users\\Acer\\Desktop\\blog-app\\src\\Components\\Paginator\\Paginator.js",[],"C:\\Users\\Acer\\Desktop\\blog-app\\src\\firebase.js",[],"C:\\Users\\Acer\\Desktop\\blog-app\\src\\Components\\Card\\Card.js",["44"],"import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Card.css';\r\n\r\nexport default function Card({ title, userImage, thumbnailUrl, subtitle, time, details, username, id }) {\r\n    return (\r\n            <Link className=\"feature-container\" to={{ pathname: `/details/${id}` }} style={{textDecoration: 'none'}}>\r\n                <img src={userImage} alt=\"Flexbox Feature\" />\r\n                <div style={{ width: '10%' }}>\r\n\r\n                </div>\r\n                <div style={{ width: '60%' }}>\r\n                    <div>\r\n                        <h2>{title}</h2>\r\n                        <p>Learn how to make a toast component with animations using React, Framer Motion, and Zustand, plus some custom Hooks...</p>\r\n                    </div>\r\n                    <div class=\"wrapper\">\r\n                        <img src=\"https://i.kinja-img.com/gawker-media/image/upload/gd8ljenaeahpn0wslmlz.jpg\" class=\"image--cover\" />\r\n                        <div style={{ display: 'grid' }}>\r\n                            <span className='username'>{username}</span>\r\n                            <span className='date'>{time}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </Link >\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\Acer\\Desktop\\blog-app\\src\\Components\\Index.js",["45"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport firebase from '../firebase';\r\nimport Card from './Card/Card';\r\nimport Paginator from './Paginator/Paginator';\r\n\r\n\r\nfunction Index() {\r\n\r\n    const [pageInfo, changepageInfo] = useState({\r\n        offset: 0,\r\n        data: [],\r\n        perPage: 4,\r\n        currentPage: 0,\r\n        pageCount: 0,\r\n        slicedBlog: null,\r\n    });\r\n\r\n    const receivedData = (offset, perPage) => {\r\n        firebase.database().ref('/').on('value', (snapshot) => {\r\n            const data = snapshot.val();\r\n            let pageCount = Math.ceil(data.length / perPage);\r\n            let slicedData = data.slice(offset, offset + perPage);\r\n            changepageInfo({\r\n                ...pageInfo,\r\n                pageCount: pageCount,\r\n                slicedBlog: slicedData\r\n            });\r\n        });\r\n    }\r\n\r\n    const handlePageClick = (e) => {\r\n        let selectedPage = e.selected;\r\n        let newOffset = selectedPage * pageInfo.perPage;\r\n\r\n        receivedData(newOffset, pageInfo.perPage);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        receivedData(pageInfo.offset, pageInfo.perPage)\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <section className=\"headline\">\r\n                <h1>Responsive Navigation</h1>\r\n                <p>Using CSS grid and flexbox to easily build navbars!</p>\r\n            </section>\r\n            <section className=\"features\">\r\n                {\r\n                    pageInfo.slicedBlog ? pageInfo.slicedBlog.map(\r\n                        blog => <React.Fragment key={blog.id}>\r\n                            <Card title={blog.title} userImage={blog.userImage} thumbnailUrl={blog.thumbnailUrl} subtitle={blog.subtitle} time={blog.time} id={blog.id} details={blog.details} username={blog.username} />\r\n                        </React.Fragment>\r\n                    ) : <p>The content is being loaded</p>\r\n                }\r\n            </section>\r\n            {\r\n                pageInfo.pageCount === 0 ? <p>deded</p> : <Paginator onPageChange={handlePageClick} pageCount={pageInfo.pageCount} />\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Index;\r\n\r\n","C:\\Users\\Acer\\Desktop\\blog-app\\src\\Components\\BlogDetails\\BlogDetails.js",["46","47"],"C:\\Users\\Acer\\Desktop\\blog-app\\src\\Components\\Footer\\Footer.js",["48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":29,"column":40,"nodeType":"55","endLine":29,"endColumn":52},{"ruleId":"56","severity":1,"message":"57","line":19,"column":25,"nodeType":"55","endLine":19,"endColumn":134},{"ruleId":"58","severity":1,"message":"59","line":42,"column":8,"nodeType":"60","endLine":42,"endColumn":10,"suggestions":"61"},{"ruleId":"56","severity":1,"message":"57","line":11,"column":25,"nodeType":"55","endLine":11,"endColumn":142},{"ruleId":"56","severity":1,"message":"57","line":24,"column":25,"nodeType":"55","endLine":24,"endColumn":174},{"ruleId":"62","severity":1,"message":"63","line":7,"column":148,"nodeType":"64","endLine":7,"endColumn":163},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'pageInfo.offset', 'pageInfo.perPage', and 'receivedData'. Either include them or remove the dependency array.","ArrayExpression",["67"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [pageInfo.offset, pageInfo.perPage, receivedData]",{"range":"70","text":"71"},[1151,1153],"[pageInfo.offset, pageInfo.perPage, receivedData]"]