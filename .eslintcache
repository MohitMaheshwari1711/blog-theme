[{"C:\\Users\\Acer\\Desktop\\blog-app\\src\\index.js":"1","C:\\Users\\Acer\\Desktop\\blog-app\\src\\App.js":"2","C:\\Users\\Acer\\Desktop\\blog-app\\src\\reportWebVitals.js":"3","C:\\Users\\Acer\\Desktop\\blog-app\\src\\Components\\Paginator\\Paginator.js":"4","C:\\Users\\Acer\\Desktop\\blog-app\\src\\firebase.js":"5","C:\\Users\\Acer\\Desktop\\blog-app\\src\\Components\\Card\\Card.js":"6","C:\\Users\\Acer\\Desktop\\blog-app\\src\\Components\\Index.js":"7","C:\\Users\\Acer\\Desktop\\blog-app\\src\\Components\\BlogDetails\\BlogDetails.js":"8","C:\\Users\\Acer\\Desktop\\blog-app\\src\\Components\\Footer\\Footer.js":"9","C:\\Users\\Acer\\Desktop\\blog-app\\src\\Components\\Helper.js":"10"},{"size":500,"mtime":499162500000,"results":"11","hashOfConfig":"12"},{"size":1313,"mtime":1607503504116,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":767,"mtime":1607371692539,"results":"15","hashOfConfig":"12"},{"size":513,"mtime":1607491937422,"results":"16","hashOfConfig":"12"},{"size":1279,"mtime":1607506698681,"results":"17","hashOfConfig":"12"},{"size":2310,"mtime":1607504250346,"results":"18","hashOfConfig":"12"},{"size":2173,"mtime":1607506574198,"results":"19","hashOfConfig":"12"},{"size":620,"mtime":1607503929161,"results":"20","hashOfConfig":"12"},{"size":934,"mtime":1607505596555,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1wtdxd8",{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Acer\\Desktop\\blog-app\\src\\index.js",[],["44","45"],"C:\\Users\\Acer\\Desktop\\blog-app\\src\\App.js",["46"],"C:\\Users\\Acer\\Desktop\\blog-app\\src\\reportWebVitals.js",[],"C:\\Users\\Acer\\Desktop\\blog-app\\src\\Components\\Paginator\\Paginator.js",[],"C:\\Users\\Acer\\Desktop\\blog-app\\src\\firebase.js",[],"C:\\Users\\Acer\\Desktop\\blog-app\\src\\Components\\Card\\Card.js",["47"],"C:\\Users\\Acer\\Desktop\\blog-app\\src\\Components\\Index.js",["48"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport db from '../firebase';\r\nimport Card from './Card/Card';\r\nimport Paginator from './Paginator/Paginator';\r\n\r\n\r\nfunction Index() {\r\n\r\n    const [pageInfo, changepageInfo] = useState({\r\n        offset: 0,\r\n        data: [],\r\n        perPage: 4,\r\n        currentPage: 0,\r\n        pageCount: 0,\r\n        slicedBlog: null,\r\n    });\r\n\r\n    const receivedData = (offset, perPage) => {\r\n        db.collection(\"blogs\").get().then(\r\n            querySnapshot => {\r\n                const data = querySnapshot.docs.map(doc => {\r\n                    return {\r\n                        id: doc.id,\r\n                        ...doc.data()\r\n                    }\r\n                });\r\n                console.log(data)\r\n                let pageCount = Math.ceil(data.length / perPage);\r\n                let slicedData = data.slice(offset, offset + perPage);\r\n                changepageInfo({\r\n                    ...pageInfo,\r\n                    pageCount: pageCount,\r\n                    slicedBlog: slicedData\r\n                });\r\n            }\r\n        )\r\n    }\r\n\r\n    const handlePageClick = (e) => {\r\n        let selectedPage = e.selected;\r\n        let newOffset = selectedPage * pageInfo.perPage;\r\n\r\n        receivedData(newOffset, pageInfo.perPage);\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        receivedData(pageInfo.offset, pageInfo.perPage)\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <React.Fragment>\r\n            <section className=\"headline\">\r\n            </section>\r\n            <section className=\"features\">\r\n                {\r\n                    pageInfo.slicedBlog ? pageInfo.slicedBlog.map(\r\n                        blog => <React.Fragment key={blog.id}>\r\n                            <Card title={blog.title} userImage={blog.userImage} thumbnailUrl={blog.thumbnailUrl} subtitle={blog.subtitle} date={blog.date} id={blog.id} details={blog.details} username={blog.username} />\r\n                        </React.Fragment>\r\n                    ) : <p>The content is being loaded</p>\r\n                }\r\n            </section>\r\n            {\r\n                pageInfo.pageCount === 0 ? <p>deded</p> : <Paginator onPageChange={handlePageClick} pageCount={pageInfo.pageCount} />\r\n            }\r\n        </React.Fragment>\r\n    );\r\n}\r\n\r\nexport default Index;\r\n\r\n","C:\\Users\\Acer\\Desktop\\blog-app\\src\\Components\\BlogDetails\\BlogDetails.js",["49","50","51"],"C:\\Users\\Acer\\Desktop\\blog-app\\src\\Components\\Footer\\Footer.js",["52","53"],"C:\\Users\\Acer\\Desktop\\blog-app\\src\\Components\\Helper.js",[],{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","severity":1,"message":"59","line":29,"column":40,"nodeType":"60","endLine":29,"endColumn":52},{"ruleId":"61","severity":1,"message":"62","line":27,"column":25,"nodeType":"60","endLine":27,"endColumn":73},{"ruleId":"63","severity":1,"message":"64","line":50,"column":8,"nodeType":"65","endLine":50,"endColumn":10,"suggestions":"66"},{"ruleId":"63","severity":1,"message":"67","line":24,"column":8,"nodeType":"65","endLine":24,"endColumn":10,"suggestions":"68"},{"ruleId":"61","severity":1,"message":"62","line":31,"column":25,"nodeType":"60","endLine":31,"endColumn":90},{"ruleId":"61","severity":1,"message":"62","line":50,"column":25,"nodeType":"60","endLine":50,"endColumn":97},{"ruleId":"69","severity":1,"message":"70","line":9,"column":154,"nodeType":"71","endLine":9,"endColumn":169},{"ruleId":"69","severity":1,"message":"70","line":12,"column":144,"nodeType":"71","endLine":12,"endColumn":159},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'pageInfo.offset', 'pageInfo.perPage', and 'receivedData'. Either include them or remove the dependency array.","ArrayExpression",["74"],"React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.",["75"],"react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","JSXAttribute","no-global-assign","no-unsafe-negation",{"desc":"76","fix":"77"},{"desc":"78","fix":"79"},"Update the dependencies array to be: [pageInfo.offset, pageInfo.perPage, receivedData]",{"range":"80","text":"81"},"Update the dependencies array to be: [id]",{"range":"82","text":"83"},[1401,1403],"[pageInfo.offset, pageInfo.perPage, receivedData]",[601,603],"[id]"]